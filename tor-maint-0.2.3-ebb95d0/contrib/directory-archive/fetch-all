#!/bin/bash

# Download all current v2 directory status documents, then download
# the descriptors and extra info documents.

# Copyright (c) 2005, 2006, 2007, 2008 Peter Palfrader
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

TZ=UTC
export TZ

DIRSERVERS=""
DIRSERVERS="$DIRSERVERS 86.59.21.38:80"		# tor26
DIRSERVERS="$DIRSERVERS 128.31.0.34:9031"	# moria1
DIRSERVERS="$DIRSERVERS 128.31.0.34:9032"	# moria2
DIRSERVERS="$DIRSERVERS 194.109.206.212:80"	# dizum

DATEDIR=$(date "+%Y/%m/%d")
TIME=$(date "+%Y%m%d-%H%M%S")

. fetch-all-functions

statuses=""
for dirserver in $DIRSERVERS; do
	authorities=$(wget -q -O - http://$dirserver/tor/status/all | egrep '^fingerprint ' | awk '{print $2}')
	if [ "$authorities" == "" ]; then
		echo "Did not get a list of authorities from $dirserver, going to next" 2>&1
		continue
	fi

	dir="status/$DATEDIR"
	[ -d "$dir" ] || mkdir -p "$dir"

	authprefix="$dir/$TIME-"
	for fp in $authorities; do
		wget -q -O "$authprefix$fp" http://$dirserver/tor/status/fp/"$fp"
		bzip2 "$authprefix$fp"
		statuses="$statuses $authprefix$fp.bz2"
	done
	if [ "$statuses" == "" ]; then
		echo "Did not get any statuses from $dirserver, going to next" 2>&1
		continue
	else
		break
	fi
done

if [ "$statuses" = "" ]; then
	echo "No statuses available" 2>&1
	exit 1
fi

digests=$( for i in ` bzcat $statuses | awk '$1 == "r" {printf "%s=\n", $4}' | sort -u `; do
		echo $i | \
		base64-decode | \
		perl -e 'undef $/; $a=<>; print unpack("H\*", $a),"\n";';
	done )
for digest in $digests; do
	fetch_digest "$digest" "server-descriptor"
done
